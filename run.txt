//// Docker file
docker network create chord-network

docker run --name bootstrap --network chord-network --env-file .env -p 8000:8000 --rm chordify python bootstrap.py

curl -X POST http://127.0.0.1:8001/insert -H "Content-Type: application/json" -d '{"key": "song1", "value": "node8001"}'

curl -X GET "http://127.0.0.1:8001/query?key=song1"


///// Docker compose yml
sudo docker-compose build
sudo docker-compose up
    (Debugger on -> Οταν αλλαζεις κατι απλα κλεινεις και ξανακανεις up)

// New node
sudo docker run -d \
    --network chordify_default \
    --name node7 \
    -v $(pwd):/app \
    -e IP=node7 \
    -e PORT=8007 \
    -p 8007:8007 \
    chordify \
    python api.py --ip node7 --port 8007 --bootstrap_ip bootstrap --bootstrap_port 8000


// get network
curl -X GET http://127.0.0.1:8001/overlay

curl -X POST http://localhost:8002/depart

 - Extra join δεν εχω βρει πως να κανεις αλλα δεν νομιζω οτι χρειαζεται κιολας 
 - Δηλαδή σίγουρα καλο ειναι να ξερεις πως γίνεται, αλλά για αυτή την στιγμή είμαστε καλα
 - Μαλλον με καποιο docker run ---name node5 κατι τετοιο

//////////////
nodes
3
1153412323553608433409003516544375445689255214539

2
1094592468334682115993406799157015824791113659155

5
605907502187820619582591828504881381613563872501

4
300958178807431293100459636149632972812029243419

6
219554627954620086306823540638194890711608052240

1
171865491289448819003469989719053766790160449571

1420581437667931473358569046990045498294268739854 - song1
897157909036590648573699943635484619774617861767 - yolo

/// insert / query / delete
curl -X POST http://node3:8003/insert \
     -H "Content-Type: application/json" \
     -d '{"key": "Imagine", "value": "random"}'
